Numeri

* interi (Fixnum, Bignum)
** possono avere qualsiasi lunghezza.
** vengono convertiti in automatico da Ruby in oggetti Fixnum o Bignum a seconda della dimensione.
** posso mettere davanti un carattere che ne indica la base in cui devono essere interpretati: 0 = ottale, 0d = decimale = default, 0x = esadecimale, 0b = binario.
** gli underscore vengono ignorati e servono solo per leggere meglio il numero

* virgola mobile (Float)
** basta mettere un punto (.0) per trasformare un Fixnum in un Float, con il punto Ruby capisce che deve fare la conversione
** Venfono memorizzati in un oggetto Float (sia se espressi con virgola mobile, sia quando espressi con esponente)
** sia numeri con virgola mobile, es: 1.2 -> Float
** sia numeri con esponente, es: 5e0 = 5.0 * 10^0 = 5.0 * 1 = 5.0; 5e2 = 5.0 * 10^2 = 5.0 * 100 = 500.0 -> Float

* razionali (Rational)
** esprime il rapporto tra due numeri interi, sono delle frazioni. Dunque rispetto ai float hanno una rappresentazione "esatta" Es: 1 / 3 = 0.3333333333... che poi ruby arrotonda
** Es: Rational(3, 4) oppure Rational('3/4')

* complessi (Complex)
** viene rappresentato come parte reale e parte immaginaria:
** Complex(1,1) = 1+1i