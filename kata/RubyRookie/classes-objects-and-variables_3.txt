Variabili e Attributi
Lo stato di un oggetto risiede nelle sue variabili di istanza. (@)
Di default queste sono private.
Quando una viene resa pubblica, questa prende il nome di attributo dell'oggetto.

GET
esplicitamente lo posso fare con un metodo -> def nome_variabile() ... end
shortcut                                   -> attr_reader :nome_variabile

SET
esplicitamente lo posso fare con un metodo -> def nome_variabile=()... end
shortcut                                   -> attr_writer :nome_variabile

GET/SET
esplicitamente -> def nome_variabile() ... end; def nome_variabile=()... end
shortcut       -> attr_accessor :nome_variabile

Gli accessor a mano sono utili se devo fare delle manipolazioni ulteriori sulle variabili e non solo assegnarle e
leggerle così come sono.

------------------------------------------------------------------------------------------------------------------------
Come leggere un file csv

require 'csv'
CSV.foreach(csv_file_name, headers: true) do |row|
    row['nome_colonna']
end

------------------------------------------------------------------------------------------------------------------------
Controllo degli accessi
Ci sono tre livelli di protezione dei metodi: pubblico, protetto, privato.
public (default): lo possono vedere tutti.
protected       : solo gli oggetti dello stesso tipo e quelli derivati lo possono vedere. (NB: qui è differente dagli
                  altri linguaggi.)
private         : solo l'oggetto corrente lo può vedere.

Il controllo è fatto dinamicamente e non staticamente. Una violazione dell'accesso viene segnalata solo nel momento in
cui si tenta di farla.

Esempi:
La variabile balance e leggibile, ma solo dalla classe in cui vive o da una classe derivata.
attr_reader :balance
protected :balance

Tutti i metodi che stanno sonno 'private' sono privati.
private
...
...

Specifico quali sono i metodi che devono essere privati in maniera esplicita.
private :debit, :credit

------------------------------------------------------------------------------------------------------------------------