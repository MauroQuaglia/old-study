before(:example) o before(:each)
Viene eseguito prima di ogni test.
E' l'unico che supporta il mocking.

after(:example) o after(:each)
Viene eseguito dopo ogni test.

before(:context) o before(:all)
Viene eseguito solo una volta, prima di tutti i test del gruppo di test che ho lanciato.
Se qui c'è un errore anche tutti itest che fanno riferimento a questo :context falliscono.

after(:context) o after(:all)
Viene eseguito solo una volta, alla fine di tutti i test del gruppo di test che ho lanciato.

before(:suite)
Eseguito prima di TUTTA la suite di test, non dei singoli gruppi. E' come se fosse una configurazione globale e
proprio per questo si può definire solo tramite configurazione.
In questo caso non posso definire variabili di istanza.

after(:suite)
Eseguito alla fine della suite di test.

ORDINE:
suite
context
example
example
context
suite

Tutti questi before(:example), after(:example), ecc, si possono definire direttamente nel gruppo di test
oppure nel blocco RSpec.configure.

------------------------------------------------------------------------------------------------------------------------

around prende un test e lo decora con delle operazioni.
Se ci sono dei before(:example) e degli after(:example) --> around(example(test))
Se ci sono dei before(:context) e degli after(:context) --> context(around(test))

around(:example) do |example|
    puts 'first'
    puts example.run
    puts 'second'
end

All'interno dell'around ho accesso ai metadati:
around(:example) do |exp|
    puts exp.metadata[:foo]
end
it 'does something', foo: 'this is metadata' do
end

Se anche un test fallisce, dentro l'around il prima e il dopo del test vengono eseguiti.
si può definire anche tramite configurazione.

