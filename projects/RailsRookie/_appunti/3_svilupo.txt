RUBY

Marshaling
Ruby può prendere un oggetto e convertirlo in uno strem di byte che può essere salvato. Questo processo si chiama
marshaling.
Rails usa marshaling per memorizzare i dati di sessione.

Idiomi
a || b
Se a è false o nil torna b, altrimenti torna a.
Usato di solito per i default, dove b è il default.

a ||= b (a operatore= b)
Significa a = a || b (a operatore= b). Assegna alla prima variabile (a) il valore di (a || b)
count += 1  -> count = count + 1
count ||= 0 -> count = count || 0

self.new
Torna un'istanza della classe stessa. Di solito si usa quando c'è l'ereditarietà e torna un'istanza della classe stessa.

require
require_relative -> specifico solo le directory
require -> devo specificare tutto il path, con cose del tipo ..\..

require File.expand_path('../../congif/environment', __FILE__)
Ruby cerca questi file nelle directory specificate nel LOAD_PATH

require File.expand_path('../../congif/environment/x.txt', __FILE__)
Ruby cerca questo file nelle directory specificate nel LOAD_PATH, in questo caso però cerco solo un file specifico.

------------------------------------------------------------------------------------------------------------------------
RAILS

Generazione controller:
Generare SayController con due action, hello e goodbye:
* rails generate controller Say hello goodbye

Navigazione URL:
http://localhost:3000/controller/azione
http://localhost:3000/say/hello
Quando navigo "/say/hello" rails crea una nuova istanza di SayController e chiama il metodo hello, dopodiche cerca la view
hello.html.erb

NOTE
Tutte le volte che carico una pagina, in
dev: ricarica tutti i file
test, pro: li tiene in memoria

* link_to()
Buona norma usarlo per link interni all'applicazione.
Per link esterni posso decidere se preferire <a...> (oppure uso sempre link_to per convenzione)
Il path è a disposizione della rotta anche se non lo specifico, es: say_goodbye_path (NomeController_NomeAction_path)

YAML
Per configuarere
* database
* dati di test
* traduzioni





