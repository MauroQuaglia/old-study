rails new depot

Fissate le versioni con i file:
.ruby-version
.ruby-gemset
* Poi entrare della directory di progetto che così crea il gemset e rifare [bundle] perché quando uso [rails new] non
prende sempre il ruby corrente. Nel mio caso aveva preso ancora quello vecchio (1.9.3).
* Chiudo e riapro l'editor e poi posso vedere che sotto External Libraries sta prendendo il ruby e il gemset giusto.

Il mio gemset [depot] si trova qui: /home/xpuser/.rvm/gems/ruby-2.1.1@depot
Se lo voglio cancellarlo basta fare: [rvm gemset delete depot]
Se lo voglio ricreare basta:
* entrare nella directory di progetto -> crea il gemset depot vuoto
* lancio bundle                       -> scarica le gemme

Quando modifico il Gemfile, poi devo lanciare bundle.
* Se ho aggiunta una gemma, la scarica nel gemset [depot]
* Se ho tolto una gemma la cancella dal gemset [depot]

-----------------------------------------------------------------------------------------------------------------------
Migrazione

Migrare un'entità di dominio:
I nomi vanno al singolare, così l'entità "Product" viene mappata sulla tabella "products". (Product -> products)
In /config/database.yml vedo dove stanno le tabelle con i dati.
Quindi apriamo la console rails: [rails generate scaffold Product tite:string description:text image_url:string price:decimal]

Una migrazione può comportare sia un cambio di tabelle che una modifica delle stesse.
I file di migration (es: 20151028113040_create_products.rb) possono essere ritoccati a mano, prima di lanciare la migrazione.
Per lanciarla [rake db:migrate].
Se mi accorgo che ho sbagliato qualcosa posso buttare tutto [rake db:drop], sistemare il file di migrazione (20151028113040_create_products.rb)
e rifare la migrazione: [rake db:create db:migrate]

Nel file seed.rb posso mettere dei dati di default che possono essere caricati in ogni momento con il comado [rake db:seed]

I metodi con il ! nelle migrazioni:
create! -> lanciano eccezione se un record non può essere inserito su database
create  -> in caso di errore fallisce silenziosamente

------------------------------------------------------------------------------------------------------------------------
Stile
Nel layout application posso separare i body per lo stile delle varie pagine.
<body class="<%= controller.controller_name %>">
    <%= yield %>
</body>
Nel scss poi avrò: .products {...}


